{"version":3,"sources":["@axios-mock-db/mock.ts","@axios-mock-db/db/weather.ts","@axios-mock-db/db/forecast.ts","@axios-mock-db/index.js","app/helpers/constants.ts","app/helpers/weatherBuilder.ts","app/helpers/weatherClient.ts","app/store/actions/weather/weather.actions.ts","app/store/reducers/weather/weather.reducer.ts","app/store/reducers/index.ts","app/store/index.jsx","app/assets/images/background.png","app/layout/Layout.tsx","app/layout/Header.tsx","app/containers/ContainerCity.tsx","app/containers/ContainerCurrentCity.tsx","app/components/City.tsx","app/components/Weather.tsx","app/components/WeatherIcon.tsx","app/components/Forecast.tsx","app/components/ForecastDay.tsx","app/components/Tabs.tsx","app/components/Tab.tsx","app/layout/Body.tsx","app/layout/Footer.tsx","app/App.jsx","reportWebVitals.ts","index.tsx"],"names":["mock","MockAdapter","axios","delayResponse","weather","onGet","reply","forecast","onAny","passThrough","glassCard","background","backdropFilter","cityMap","AR","ES","US","FR","IT","JP","cities","id","name","country","defaultParams","exclude","appid","units","lang","weatherBuilder","data","date","dt","description","icon","temp","main","parseInt","day","min","temp_min","max","temp_max","locationBuilder","sys","city","coord","lat","lon","cityWeatherBuilder","location","daily","slice","map","weatherClient","create","baseURL","process","REACT_APP_ENABLE_MOCK","params","types","LOADING","SUCCESS","FAILED","setContext","type","payload","getWeather","dispatch","a","config","get","cityWeather","getCityWeather","getCurrentCityWeather","setActiveTab","initialState","loading","error","currentCity","activeTab","weatherReducer","state","combineReducers","weatherInitialState","AppContext","React","createContext","StoreProvider","children","useReducer","rootReducer","Provider","value","Layout","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundAttachment","className","Header","fontFamily","moment","format","ContainerCity","useContext","useEffect","loadingText","ContainerCurrentCity","usePosition","latitude","longitude","City","Weather","locale","large","WeatherIcon","src","alt","Forecast","ForecastDay","borderRadius","data-testid","unix","Tabs","active","changeTab","content","Tab","disabled","onClick","Body","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e392cd5.chunk.js","sourcesContent":["import MockAdapter from 'axios-mock-adapter'\nimport axios from 'axios'\n\nconst mock = new MockAdapter(axios, { delayResponse: 2000 })\n\nexport default mock;\n","import mock from '../mock'\n\nconst weather = {\n  \"coord\": {\n    \"lon\": -0.1257,\n    \"lat\": 51.5085\n  },\n  \"weather\": [\n    {\n      \"id\": 803,\n      \"main\": \"Clouds\",\n      \"description\": \"muy nuboso\",\n      \"icon\": \"04n\"\n    }\n  ],\n  \"base\": \"stations\",\n  \"main\": {\n    \"temp\": 8.17,\n    \"feels_like\": 1.85,\n    \"temp_min\": 7.22,\n    \"temp_max\": 9,\n    \"pressure\": 1015,\n    \"humidity\": 76\n  },\n  \"visibility\": 10000,\n  \"wind\": {\n    \"speed\": 7.2,\n    \"deg\": 250\n  },\n  \"clouds\": {\n    \"all\": 75\n  },\n  \"dt\": 1610384297,\n  \"sys\": {\n    \"type\": 1,\n    \"id\": 1414,\n    \"country\": \"GB\",\n    \"sunrise\": 1610352135,\n    \"sunset\": 1610381655\n  },\n  \"timezone\": 0,\n  \"id\": 2643743,\n  \"name\": \"London\",\n  \"cod\": 200\n}\n\nmock\n  .onGet(/\\/mock\\/weather.*/)\n  .reply(() => [200, weather])\n","import mock from '../mock'\n\nconst forecast = {\n  \"lat\": -34.4848,\n  \"lon\": -58.612,\n  \"timezone\": \"America/Argentina/Buenos_Aires\",\n  \"timezone_offset\": -10800,\n  \"daily\": [\n    {\n      \"dt\": 1610380800,\n      \"sunrise\": 1610355248,\n      \"sunset\": 1610406623,\n      \"temp\": {\n        \"day\": 29.7,\n        \"min\": 19,\n        \"max\": 29.7,\n        \"night\": 21.73,\n        \"eve\": 26.68,\n        \"morn\": 23.44\n      },\n      \"feels_like\": {\n        \"day\": 30.3,\n        \"night\": 16.32,\n        \"eve\": 25.95,\n        \"morn\": 22.98\n      },\n      \"pressure\": 1006,\n      \"humidity\": 55,\n      \"dew_point\": 19.98,\n      \"wind_speed\": 4.2,\n      \"wind_deg\": 2,\n      \"weather\": [\n        {\n          \"id\": 501,\n          \"main\": \"Rain\",\n          \"description\": \"lluvia moderada\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": 93,\n      \"pop\": 1,\n      \"rain\": 14.27,\n      \"uvi\": 9.1\n    },\n    {\n      \"dt\": 1610467200,\n      \"sunrise\": 1610441703,\n      \"sunset\": 1610493013,\n      \"temp\": {\n        \"day\": 24.81,\n        \"min\": 18.08,\n        \"max\": 25.23,\n        \"night\": 21.14,\n        \"eve\": 22.47,\n        \"morn\": 18.29\n      },\n      \"feels_like\": {\n        \"day\": 19.89,\n        \"night\": 16.95,\n        \"eve\": 18.05,\n        \"morn\": 13.33\n      },\n      \"pressure\": 1018,\n      \"humidity\": 18,\n      \"dew_point\": -2.52,\n      \"wind_speed\": 3.97,\n      \"wind_deg\": 99,\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"cielo claro\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": 0,\n      \"pop\": 0.1,\n      \"uvi\": 13.76\n    },\n    {\n      \"dt\": 1610553600,\n      \"sunrise\": 1610528160,\n      \"sunset\": 1610579402,\n      \"temp\": {\n        \"day\": 26.49,\n        \"min\": 18.22,\n        \"max\": 28.06,\n        \"night\": 24.43,\n        \"eve\": 26.05,\n        \"morn\": 18.32\n      },\n      \"feels_like\": {\n        \"day\": 21.92,\n        \"night\": 19.56,\n        \"eve\": 21.09,\n        \"morn\": 14.38\n      },\n      \"pressure\": 1020,\n      \"humidity\": 18,\n      \"dew_point\": 0.65,\n      \"wind_speed\": 3.74,\n      \"wind_deg\": 79,\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"cielo claro\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": 0,\n      \"pop\": 0,\n      \"uvi\": 13.65\n    },\n    {\n      \"dt\": 1610640000,\n      \"sunrise\": 1610614617,\n      \"sunset\": 1610665788,\n      \"temp\": {\n        \"day\": 26.78,\n        \"min\": 19.34,\n        \"max\": 29.74,\n        \"night\": 25.65,\n        \"eve\": 27.49,\n        \"morn\": 19.34\n      },\n      \"feels_like\": {\n        \"day\": 22.7,\n        \"night\": 24.06,\n        \"eve\": 23.01,\n        \"morn\": 15.11\n      },\n      \"pressure\": 1017,\n      \"humidity\": 26,\n      \"dew_point\": 5.84,\n      \"wind_speed\": 4.42,\n      \"wind_deg\": 51,\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"cielo claro\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": 0,\n      \"pop\": 0,\n      \"uvi\": 13.8\n    },\n    {\n      \"dt\": 1610726400,\n      \"sunrise\": 1610701075,\n      \"sunset\": 1610752173,\n      \"temp\": {\n        \"day\": 27.29,\n        \"min\": 21.11,\n        \"max\": 31.04,\n        \"night\": 26.53,\n        \"eve\": 30.9,\n        \"morn\": 21.11\n      },\n      \"feels_like\": {\n        \"day\": 26.47,\n        \"night\": 25.43,\n        \"eve\": 31.05,\n        \"morn\": 19.26\n      },\n      \"pressure\": 1007,\n      \"humidity\": 47,\n      \"dew_point\": 15.14,\n      \"wind_speed\": 3.47,\n      \"wind_deg\": 26,\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"lluvia ligera\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": 100,\n      \"pop\": 0.43,\n      \"rain\": 1.35,\n      \"uvi\": 3.49\n    },\n    {\n      \"dt\": 1610812800,\n      \"sunrise\": 1610787534,\n      \"sunset\": 1610838556,\n      \"temp\": {\n        \"day\": 29.21,\n        \"min\": 23.42,\n        \"max\": 31.37,\n        \"night\": 25.69,\n        \"eve\": 31.37,\n        \"morn\": 23.42\n      },\n      \"feels_like\": {\n        \"day\": 30.3,\n        \"night\": 23.63,\n        \"eve\": 28.52,\n        \"morn\": 25.57\n      },\n      \"pressure\": 1005,\n      \"humidity\": 52,\n      \"dew_point\": 18.65,\n      \"wind_speed\": 2.64,\n      \"wind_deg\": 196,\n      \"weather\": [\n        {\n          \"id\": 500,\n          \"main\": \"Rain\",\n          \"description\": \"lluvia ligera\",\n          \"icon\": \"10d\"\n        }\n      ],\n      \"clouds\": 100,\n      \"pop\": 0.94,\n      \"rain\": 5.09,\n      \"uvi\": 4\n    },\n    {\n      \"dt\": 1610899200,\n      \"sunrise\": 1610873993,\n      \"sunset\": 1610924937,\n      \"temp\": {\n        \"day\": 24.65,\n        \"min\": 19.06,\n        \"max\": 29.17,\n        \"night\": 26.36,\n        \"eve\": 29.17,\n        \"morn\": 19.06\n      },\n      \"feels_like\": {\n        \"day\": 20.76,\n        \"night\": 22.57,\n        \"eve\": 25.31,\n        \"morn\": 15.42\n      },\n      \"pressure\": 1011,\n      \"humidity\": 34,\n      \"dew_point\": 8.16,\n      \"wind_speed\": 4.8,\n      \"wind_deg\": 209,\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"cielo claro\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": 0,\n      \"pop\": 0,\n      \"uvi\": 4\n    },\n    {\n      \"dt\": 1610985600,\n      \"sunrise\": 1610960452,\n      \"sunset\": 1611011317,\n      \"temp\": {\n        \"day\": 28.05,\n        \"min\": 20.3,\n        \"max\": 29.07,\n        \"night\": 24.95,\n        \"eve\": 28.42,\n        \"morn\": 20.3\n      },\n      \"feels_like\": {\n        \"day\": 26.85,\n        \"night\": 21,\n        \"eve\": 24.7,\n        \"morn\": 20.05\n      },\n      \"pressure\": 1014,\n      \"humidity\": 29,\n      \"dew_point\": 8.81,\n      \"wind_speed\": 1.16,\n      \"wind_deg\": 81,\n      \"weather\": [\n        {\n          \"id\": 800,\n          \"main\": \"Clear\",\n          \"description\": \"cielo claro\",\n          \"icon\": \"01d\"\n        }\n      ],\n      \"clouds\": 0,\n      \"pop\": 0,\n      \"uvi\": 4\n    }\n  ]\n}\n\nmock\n  .onGet(/\\/mock\\/onecall.*/)\n  .reply(() => [200, forecast])\n","import mock from './mock'\nimport './db'\n\nmock.onAny().passThrough()\n","export const glassCard = {\n  background: 'rgba( 255, 255, 255, 0.60 )',\n  backdropFilter: 'blur( 4px )',\n}\n\nexport const cityMap: {[key: string]: string} = {\n  AR: 'Argentina',\n  ES: 'España',\n  US: 'Estados Unidos',\n  FR: 'Francia',\n  IT: 'Italia',\n  JP: 'Japon',\n}\n\nexport const cities = [\n  {\n    id: 6359304,\n    name: 'Madrid',\n    country: 'ES',\n  },\n  {\n    id: 5128581,\n    name: 'New York',\n    country: 'US',\n  },\n  {\n    id: 2968815,\n    name: 'Paris',\n    country: 'FR',\n  },\n  {\n    id: 3169070,\n    name: 'Roma',\n    country: 'IT',\n  },\n  {\n    id: 1850147,\n    name: 'Tokyo',\n    country: 'JP',\n  },\n]\n\nexport const defaultParams = {\n  exclude: 'current,hourly,minutely,alerts',\n  appid: '237e758b4bb14a5808f8f65ec1a0020e',\n  units: 'metric',\n  lang: 'es',\n}\n\nexport default {\n  glassCard,\n  cities,\n  defaultParams,\n}\n","import { CityWeather, Weather, Location } from 'app/types'\nimport { cityMap } from 'app/helpers/constants'\n\nconst weatherBuilder = (data: any): Weather => ({\n  date: data.dt,\n  description: data.weather?.[0].description,\n  icon: data.weather?.[0].icon,\n  temp: {\n    main: parseInt(data.main?.temp || data.temp.day, 10),\n    min: parseInt(data.main?.temp_min || data.temp.min, 10),\n    max: parseInt(data.main?.temp_max || data.temp.max, 10),\n  },\n})\n\nconst locationBuilder = (data: any): Location => ({\n  id: data.id,\n  country: {\n    id: data.sys.country,\n    name: cityMap[data.sys.country],\n  },\n  city: data.name,\n  coord: {\n    lat: data.coord.lat,\n    lon: data.coord.lon,\n  },\n})\n\nexport const cityWeatherBuilder = (data: any): CityWeather => ({\n  location: locationBuilder(data.weather),\n  weather: weatherBuilder(data.weather),\n  forecast: data.forecast.daily.slice(1, 6).map((weather: any) => weatherBuilder(weather)),\n})\n\nexport default cityWeatherBuilder\n","import axios from 'axios'\nimport { defaultParams } from 'app/helpers/constants'\n\nexport const weatherClient = axios.create({\n  baseURL: process.env.REACT_APP_ENABLE_MOCK\n    ? '/mock'\n    : 'https://api.openweathermap.org/data/2.5',\n  params: defaultParams,\n})\n","import { Dispatch } from 'react'\nimport { cityWeatherBuilder, weatherClient } from 'app/helpers'\nimport { RequestState, WeatherActions } from 'app/types'\n\nexport const types: WeatherActions = {\n  CITY: {\n    LOADING: '[ WEATHER ] - get city weather loading',\n    SUCCESS: '[ WEATHER ] - set city weather success',\n    FAILED: '[ WEATHER ] - set city weather failed',\n  },\n  CURRENT_CITY: {\n    LOADING: '[ WEATHER ] - get current city weather loading',\n    SUCCESS: '[ WEATHER ] - set current city weather success',\n    FAILED: '[ WEATHER ] - set current city weather failed',\n  },\n  ACTIVE_TAB: '[ WEATHER ] - set active tab',\n}\n\nconst setContext = (type: string, payload?: any) => ({\n  type,\n  payload,\n})\n\nconst getWeather = async (dispatch: Dispatch<any>, type: RequestState, config = {}) => {\n  try {\n    dispatch(setContext(type.LOADING))\n\n    const { data: weather } = await weatherClient.get('/weather', {params: {...config}})\n    const { data: forecast } = await weatherClient.get('/onecall', {params: {...weather.coord}})\n    const cityWeather = cityWeatherBuilder({weather, forecast})\n\n    dispatch(setContext(type.SUCCESS, cityWeather))\n  } catch (error) {\n    dispatch(setContext(type.FAILED, error))\n  }\n}\n\nexport const getCityWeather = (dispatch: Dispatch<any>, config?: {[key: string]: any}) => getWeather(dispatch, types.CITY, config)\n\nexport const getCurrentCityWeather = (dispatch: Dispatch<any>, config?: {[key: string]: any}) => getWeather(dispatch, types.CURRENT_CITY, config)\n\nexport const setActiveTab = (dispatch: Dispatch<any>, id: number) => dispatch(setContext(types.ACTIVE_TAB, id))\n\nexport default {\n  getCityWeather,\n  getCurrentCityWeather,\n  setActiveTab,\n}\n","import { types } from 'app/store/actions/weather/weather.actions'\nimport { cities } from 'app/helpers/constants'\nimport { CityWeather } from 'app/types'\n\ninterface CityState {\n  loading: boolean\n  data: CityWeather | null,\n  error: any,\n}\n\ninterface WeatherState {\n  city: CityState\n  currentCity: CityState\n  activeTab: number\n}\n\nexport const initialState: WeatherState = {\n  city: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  currentCity: {\n    loading: false,\n    data: null,\n    error: null,\n  },\n  activeTab: cities[0].id,\n}\n\ninterface Action {\n  type: string\n  payload?: any\n}\n\nconst weatherReducer = (state: any, { type, payload }: Action) => {\n  switch (type) {\n    case types.CITY.LOADING:\n      return {\n        ...state,\n        city: {\n          ...state.city,\n          loading: true,\n        },\n      }\n    case types.CITY.SUCCESS:\n      return {\n        ...state,\n        city: {\n          ...state.city,\n          loading: false,\n          data: payload,\n          error: null,\n        },\n      }\n    case types.CITY.FAILED:\n      return {\n        ...state,\n        city: {\n          ...state.city,\n          loading: false,\n          error: payload,\n        },\n      }\n    case types.CURRENT_CITY.LOADING:\n      return {\n        ...state,\n        currentCity: {\n          ...state.currentCity,\n          loading: true,\n        },\n      }\n    case types.CURRENT_CITY.SUCCESS:\n      return {\n        ...state,\n        currentCity: {\n          ...state.currentCity,\n          loading: false,\n          data: payload,\n          error: null,\n        },\n      }\n    case types.CURRENT_CITY.FAILED:\n      return {\n        ...state,\n        currentCity: {\n          ...state.currentCity,\n          loading: false,\n          error: payload,\n        },\n      }\n    case types.ACTIVE_TAB:\n      return {\n        ...state,\n        activeTab: payload,\n      }\n    default:\n      return {\n        ...state,\n      }\n  }\n}\n\nexport default weatherReducer\n","import combineReducers from 'react-combine-reducers'\nimport weatherReducer, { initialState as weatherInitialState } from './weather/weather.reducer'\n\nexport default combineReducers({\n  weather: [weatherReducer, weatherInitialState],\n})\n","import React, { useReducer } from 'react'\nimport rootReducer from './reducers'\n\nexport const AppContext = React.createContext()\n\nconst StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(...rootReducer);\n  return <AppContext.Provider value={{state, dispatch}}>{children}</AppContext.Provider>\n}\n\nexport default StoreProvider\n","export default __webpack_public_path__ + \"static/media/background.c3be8a40.png\";","import React from 'react'\nimport { Header, Body, Footer } from './'\nimport background from 'app/assets/images/background.png'\n\nconst Layout = () => (\n  <div\n    style={{\n      backgroundImage: `url(${background})`,\n      backgroundRepeat: 'no-repeat',\n      backgroundSize: 'cover',\n      backgroundAttachment: 'scroll',\n    }}\n  >\n    <div className=\"container mx-auto\">\n      <div className=\"flex flex-col h-screen overflow-y-auto\">\n        <Header />\n        <Body />\n        <Footer />\n      </div>\n    </div>\n  </div>\n)\n\nexport default Layout\n","import React from 'react'\nimport moment from 'moment'\n\nconst Header = () => (\n  <div className=\"flex flex-row justify-between items-end py-4 px-8 md:px-0\">\n    <span\n      className=\"font-bold text-3xl md:text-5xl\"\n      style={{fontFamily: 'Berkshire Swash'}}\n    >\n      <span className=\"text-red-500\">floyd</span> app</span>\n    <span className=\"uppercase font-bold text:xl md:text-2xl\">{moment().format('MMMM YYYY')}</span>\n  </div>\n)\n\nexport default Header\n","import React, { FC, useContext, useEffect } from 'react'\nimport { AppContext } from 'app/store'\nimport { getCityWeather } from 'app/store/actions/weather/weather.actions'\nimport { City } from 'app/components'\n\nconst ContainerCity: FC = ({ children }) => {\n  const { state: { weather: { city: { loading, data }, activeTab: id } }, dispatch } = useContext(AppContext)\n\n  useEffect(() => {\n    getCityWeather(dispatch, { id })\n  }, [dispatch, id])\n\n  return (\n    <div>\n      {!loading && children}\n      <City\n        loading={loading}\n        loadingText=\"Cargando datos de otras ciudades...\"\n        data={data}\n      />\n    </div>\n  )\n}\n\nexport default ContainerCity\n","import React, { useContext, useEffect } from 'react'\nimport { AppContext } from 'app/store'\nimport { getCurrentCityWeather } from 'app/store/actions/weather/weather.actions'\nimport { City } from 'app/components'\nimport { usePosition } from 'use-position'\n\nconst ContainerCurrentCity = () => {\n  const { state: { weather: { currentCity: { loading, data } } }, dispatch } = useContext(AppContext)\n  const { latitude: lat, longitude: lon } = usePosition(false);\n\n  useEffect(() => {\n    lat && lon && getCurrentCityWeather(dispatch, { lat, lon })\n  }, [dispatch, lat, lon])\n\n  return (\n    <div>\n      <City\n        loading={loading}\n        loadingText=\"Cargando datos de tu ciudad...\"\n        data={data}\n      />\n    </div>\n  )\n}\n\nexport default ContainerCurrentCity\n","import React, { FC } from 'react'\nimport { Forecast, Weather } from './'\n\ninterface CityProps {\n  loading: boolean\n  loadingText: string\n  data: any\n}\n\nconst City: FC<CityProps> = ({ loading, loadingText, data }) => loading\n  ? <p className=\"text-center\">{ loadingText }</p>\n  : data\n    ? (<>\n        <Weather weather={data.weather} location={data.location} />\n        <Forecast forecast={data.forecast} />\n    </>)\n    : null\n\nexport default City\n","import React, { FC } from 'react'\nimport moment from 'moment'\nimport { glassCard } from 'app/helpers/constants'\nimport { Location, Weather as WeatherType } from 'app/types'\nimport { WeatherIcon } from './'\n\ninterface WeatherProps {\n  location: Location,\n  weather: WeatherType,\n}\n\nconst Weather: FC<WeatherProps> = ({ weather, location }) => {\n  return (\n    <div\n      className=\"flex flex-col md:flex-row justify-between items-stretch sm:items-center md:items-stretch rounded-b-2xl w-auto sm:w-1/2 md:w-auto\"\n      style={glassCard}\n    >\n      <div className=\"flex flex-col items-center sm:items-stretch font-lg p-4 text-2xl flex-1 text-center md:text-left\">\n        <span className=\"text-5xl font-bold\">{location?.city}<span className=\"text-3xl font-light\">, {location.country.name}</span></span>\n        <span className=\"italic font-light flex-1 pt-2 font-bold capitalize\">{moment().locale('es').format('dddd DD')}</span>\n        <span className=\"font-bold uppercase\">{weather?.description}</span>\n      </div>\n      <div className=\"flex flex-row justify-center items-center bg-blue-500 pl-4 py-2 rounded-b-2xl\">\n        <div className=\"flex flex-col justify-center font-bold text-center\">\n          <span className=\"text-6xl md:text-9xl\">{weather?.temp.main}º</span>\n          <span className=\"text-xl\">{weather?.temp.min}º / {weather?.temp.max}º</span>\n        </div>\n        <WeatherIcon large icon={weather.icon} description={weather.description} />\n      </div>\n    </div>\n  )\n}\n\nexport default Weather\n","import React, { FC } from 'react'\n\ninterface WeatherIconProps {\n  large?: boolean\n  icon: string\n  description?: string\n}\n\nconst WeatherIcon: FC<WeatherIconProps> = ({ large = false, icon, description }) => (\n  <img src={`http://openweathermap.org/img/wn/${icon}${large ? '@4x' : ''}.png`} alt={description || icon} />\n)\n\nexport default WeatherIcon\n","import React, { FC } from 'react'\nimport { ForecastDay } from './'\nimport { Weather } from 'app/types'\n\ninterface ForecastProps {\n  forecast: Weather[]\n}\n\nconst Forecast: FC<ForecastProps> = ({ forecast }) => {\n  return (\n    <div className=\"flex flex-row flex-wrap justify-between align-items-center w-auto sm:w-1/2 md:w-auto pl-0 sm:pl-4 md:pl-0\">\n      {\n        forecast?.map((weather: Weather) => <ForecastDay key={weather.date} weather={weather} />)\n      }\n    </div>\n  )\n}\n\nexport default Forecast\n","import React, { FC } from 'react'\nimport moment from 'moment'\nimport { glassCard } from 'app/helpers/constants'\nimport { Weather } from 'app/types'\nimport { WeatherIcon } from './'\n\ninterface ForecastDayProps {\n  weather: Weather\n}\n\nconst ForecastDay: FC<ForecastDayProps> = ({ weather }) => {\n  return (\n    <div\n      className=\"w-full md:w-auto flex flex-row items-center my-4\"\n      style={{\n        borderRadius: '50px',\n        ...glassCard,\n      }}\n      data-testid=\"forecast-day\"\n    >\n      <div\n        className=\"bg-blue-500\"\n        style={{\n          borderRadius: '50px',\n        }}\n      >\n        <WeatherIcon icon={weather.icon} description={weather.description} />\n      </div>\n      <div className=\"text-center flex-1 pl-4 pr-6 text-xl md:text-base\">\n        <div className=\"inline-block md:block capitalize\">{moment.unix(weather.date).format('dddd DD')}</div>\n        <span className=\"inline md:hidden\"> - </span>\n        <div className=\"inline-block md:block\"><span className=\"font-bold\">{weather.temp.min}º</span> / <span className=\"font-bold\">{weather.temp.max}º</span></div>\n      </div>\n    </div>\n  )\n}\n\nexport default ForecastDay\n","import React, { useContext } from 'react'\nimport { Tab } from './';\nimport { cities } from 'app/helpers/constants'\nimport { AppContext } from 'app/store'\nimport { setActiveTab } from 'app/store/actions/weather/weather.actions'\n\nconst Tabs= () => {\n  const { state: { weather: { activeTab } }, dispatch } = useContext(AppContext)\n\n  return (\n    <div className=\"flex flex-row text-center justify-content-center w-full pb-2\">\n      {\n        cities.map((city) => {\n          const active = activeTab === city.id\n\n          return (\n            <Tab\n              key={city.id}\n              active={active}\n              changeTab={() => setActiveTab(dispatch, city.id)}\n              content={\n                <>\n                  <span className=\"hidden sm:block rounded-b-\">{city.name}</span>\n                  <span className=\"sm:hidden block\">{city.country}</span>\n                </>\n              }\n            />\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default Tabs\n","import React, {FC, ReactElement} from 'react'\nimport { glassCard } from 'app/helpers/constants'\n\ninterface TabProps {\n  active: boolean\n  changeTab: () => void\n  content: ReactElement | string\n}\n\nconst Tab: FC<TabProps> = ({ active, changeTab, content }) => {\n\n  return (\n    <button\n      className={`\n        w-1/5 ml-2 mr-2 first:ml-0 last:mr-0 p-2 rounded-md \n        ${active ? 'text-white font-bold' : 'text-gray-900 bg-white'}\n      `}\n      style={active ? glassCard : {}}\n      disabled={active}\n      onClick={changeTab}\n      data-testid=\"tab\"\n    >\n      { content }\n    </button>\n  )\n}\n\nexport default Tab\n","import React from 'react'\nimport { Tabs } from 'app/components'\nimport { ContainerCurrentCity, ContainerCity } from 'app/containers'\n\nconst Body = () => (\n  <div className=\"flex flex-1 flex-wrap flex-col sm:flex-row md:flex-col justify-around bg-primary my-4 px-8 md:px-0\">\n    <ContainerCurrentCity />\n    <span className=\"border-gray-200 mt-4 border-t-2 pt-8 mb-2 w-full\" />\n    <ContainerCity >\n      <Tabs />\n    </ContainerCity>\n  </div>\n)\n\nexport default Body\n","import React from 'react'\n\nconst Footer = () => (\n  <div className=\"flex flex-col md:flex-row text-center md:text-base justify-between text-xs pt-4 pb-2 px-8 md:px-0\">\n    <span>Developer: <span className=\"font-bold\">Matias Thompson</span></span>\n  </div>\n)\n\nexport default Footer\n","import React from 'react'\nimport '@axios-mock-db'\nimport StoreProvider from 'app/store'\nimport { Layout } from 'app/layout'\nimport moment from 'moment'\nimport 'moment/locale/es'\n\nmoment.locale('es')\n\nconst App = () => (\n  <StoreProvider>\n    <Layout />\n  </StoreProvider>\n);\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}